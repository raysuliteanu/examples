plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
//    id 'application'
    id 'idea'
}

group 'org.kidoni.examples'
version '0.0.1-SNAPSHOT'

repositories {
    mavenCentral()
}

/*
ext {
    grpcVersion = '1.57.0'
    protobufVersion = '3.14.0'
    protocVersion = protobufVersion
}
*/

dependencies {
    implementation "io.grpc:grpc-protobuf:1.57.0"
    implementation "io.grpc:grpc-stub:1.57.0"

    if (JavaVersion.current().isJava9Compatible()) {
        // Workaround for @javax.annotation.Generated
        // see: https://github.com/grpc/grpc-java/issues/3633
        implementation 'javax.annotation:javax.annotation-api:1.3.1'
    }

    implementation 'com.google.protobuf:protobuf-java:3.16.3'

//    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"

    testImplementation "io.grpc:grpc-testing:1.57.0"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}


protobuf {
    // Configure the protoc executable
    protoc {
        // Download from repositories
        artifact = 'com.google.protobuf:protoc:3.0.0'
    }
    plugins {
        grpc { artifact = "io.grpc:protoc-gen-grpc-java:1.57.0" }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

sourceSets {
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}

test {
    useJUnitPlatform()
}

/*
// application plugin-related tasks
task GreetingServer(type: CreateStartScripts) {
    mainClassName = 'org.kidoni.examples.grpc.GreetingServiceServer'
    applicationName = 'greeting-server'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

task GreetingClient(type: CreateStartScripts) {
    mainClassName = 'org.kidoni.examples.grpc.GreetingClient'
    applicationName = 'greeting-client'
    outputDir = new File(project.buildDir, 'tmp')
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(GreetingServer)
    from(GreetingClient)
    fileMode = 0755
}
*/
